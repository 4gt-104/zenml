name: Update Tutorials

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'tutorials/**'

jobs:
  update-tutorials:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0  # Fetch all history for all branches and tags

    - name: Set up Python 3.9
      uses: actions/setup-python@v5.0.0
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nbconvert pyyaml jupyter

    - name: Clear notebook outputs
      run: |
        find tutorials -name "*.ipynb" -exec jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace {} \;
    
    - name: Update Tutorials
      id: update_tutorials
      run: python scripts/update_tutorials.py
    
    - name: Check for changes
      id: git-check
      run: |
        git add tutorials docs/book
        git status
        git diff --staged --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

    - name: Commit changes
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "Update Tutorial content and clear notebook outputs"

    - name: Push changes
      if: steps.git-check.outputs.changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.head_ref }}

    - name: Create PR comment
      if: steps.git-check.outputs.changes == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const prNumber = context.payload.pull_request.number;
          console.log(`PR number: ${prNumber}`);
          
          try {
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'The tutorials content has been successfully updated.'
            });
          } catch (error) {
            console.error('Error creating comment:', error);
            core.setFailed(`Failed to create comment: ${error.message}`);
          }

    - name: Create PR comment on no changes
      if: steps.git-check.outputs.changes != 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const prNumber = context.payload.pull_request.number;
          console.log(`PR number: ${prNumber}`);
          
          try {
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'No changes were detected in the tutorials content.'
            });
          } catch (error) {
            console.error('Error creating comment:', error);
            core.setFailed(`Failed to create comment: ${error.message}`);
          }