"""rename model_config to model_version [14d687c8fa1c].

Revision ID: 14d687c8fa1c
Revises: 93cbda80a732
Create Date: 2023-11-10 15:54:05.572744

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "14d687c8fa1c"
down_revision = "93cbda80a732"
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema and/or data, creating a new revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "model_versions_artifacts", schema=None
    ) as batch_op:
        batch_op.alter_column(
            "is_model_object", new_column_name="is_model_artifact"
        )
        batch_op.alter_column(
            "is_deployment", new_column_name="is_endpoint_artifact"
        )

    connection = op.get_bind()

    update_config_fields = sa.text(
        """
        UPDATE pipeline_deployment
        SET pipeline_configuration = REPLACE(
            pipeline_configuration,
            '"model_config"',
            '"model_version"'
        )
        WHERE pipeline_configuration IS NOT NULL
        """
    )
    connection.execute(update_config_fields)

    update_config_fields = sa.text(
        """
        UPDATE pipeline_deployment
        SET step_configurations = REPLACE(
            step_configurations,
            '"model_config"',
            '"model_version"'
        )
        WHERE step_configurations IS NOT NULL
        """
    )
    connection.execute(update_config_fields)

    update_config_fields = sa.text(
        """
        UPDATE step_run
        SET step_configuration = REPLACE(
            step_configuration,
            '"model_config"',
            '"model_version"'
        )
        WHERE step_configuration IS NOT NULL
        """
    )
    connection.execute(update_config_fields)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema and/or data back to the previous revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table(
        "model_versions_artifacts", schema=None
    ) as batch_op:
        batch_op.alter_column(
            "is_model_artifact", new_column_name="is_model_object"
        )
        batch_op.alter_column(
            "is_endpoint_artifact", new_column_name="is_deployment"
        )

    connection = op.get_bind()

    update_config_fields = sa.text(
        """
        UPDATE pipeline_deployment
        SET pipeline_configuration = REPLACE(
            pipeline_configuration,
            '"model_version"',
            '"model_config"'
        )
        WHERE pipeline_configuration IS NOT NULL
        """
    )
    connection.execute(update_config_fields)

    update_config_fields = sa.text(
        """
        UPDATE pipeline_deployment
        SET step_configurations = REPLACE(
            step_configurations,
            '"model_version"',
            '"model_config"'
        )
        WHERE step_configurations IS NOT NULL
        """
    )
    connection.execute(update_config_fields)

    update_config_fields = sa.text(
        """
        UPDATE step_run
        SET step_configuration = REPLACE(
            step_configuration,
            '"model_version"',
            '"model_config"'
        )
        WHERE step_configuration IS NOT NULL
        """
    )
    connection.execute(update_config_fields)
    # ### end Alembic commands ###
