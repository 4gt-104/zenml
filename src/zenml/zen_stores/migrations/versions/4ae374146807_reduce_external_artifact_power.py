"""reduce external_artifact power [4ae374146807].

Revision ID: 4ae374146807
Revises: 0.55.0
Create Date: 2024-01-22 15:09:20.856618

"""
import sqlalchemy as sa
from alembic import op
from sqlmodel import Session

# revision identifiers, used by Alembic.
revision = "4ae374146807"
down_revision = "0.55.0"
branch_labels = None
depends_on = None


update_stmts = [
    sa.text(
        """
        UPDATE pipeline_deployment
        SET pipeline_configuration = REPLACE(
            pipeline_configuration,
            :source_field,
            :target_field
        )
        WHERE pipeline_configuration IS NOT NULL
        """
    ),
    sa.text(
        """
        UPDATE pipeline_deployment
        SET step_configurations = REPLACE(
            step_configurations,
            :source_field,
            :target_field
        )
        WHERE step_configurations IS NOT NULL
        """
    ),
    sa.text(
        """
        UPDATE step_run
        SET step_configuration = REPLACE(
            step_configuration,
            :source_field,
            :target_field
        )
        WHERE step_configuration IS NOT NULL
        """
    ),
]


def upgrade() -> None:
    """Upgrade database schema and/or data, creating a new revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    session = Session(bind=connection)

    for source_field, target_field in [
        ('"external_input_artifacts"', '"external_input_artifact_ids"'),
    ]:
        for update_stmt in update_stmts:
            session.execute(
                update_stmt,
                params=dict(
                    source_field=source_field,
                    target_field=target_field,
                ),
            )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema and/or data back to the previous revision."""
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    session = Session(bind=connection)

    for source_field, target_field in [
        ("external_input_artifact_ids", "external_input_artifacts"),
    ]:
        for update_stmt in update_stmts:
            session.execute(
                update_stmt,
                params=dict(
                    source_field=source_field,
                    target_field=target_field,
                ),
            )

    # ### end Alembic commands ###
